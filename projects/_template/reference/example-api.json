{
  "openapi": "3.1.0",
  "info": {
    "title": "Example API",
    "version": "1.0",
    "description": "This is an example OpenAPI file. It comes with the right authentication for publiq APIs, and some standard error responses. Feel free to edit or remove it!",
    "contact": {
      "name": "publiq helpdesk",
      "email": "technical-support@publiq.be",
      "url": "https://docs.publiq.be"
    }
  },
  "servers": [
    {
      "url": "https://test-example-api.publiq.be",
      "description": "Testing"
    },
    {
      "url": "https://example-api.publiq.be",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "Example"
    }
  ],
  "components": {
    "schemas": {
      "Error": {
        "$ref": "https://raw.githubusercontent.com/cultuurnet/apidocs/main/projects/errors/models/Error.json",
        "x-internal": true
      }
    },
    "securitySchemes": {
      "USER_ACCESS_TOKEN": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "",
            "tokenUrl": "",
            "refreshUrl": "",
            "scopes": {}
          }
        },
        "description": "A user access token, obtained by redirecting the end user to publiq's authorization server to login. See the [authentication docs about user access tokens](https://docs.publiq.be/docs/authentication/methods/user-access-token) for more info."
      },
      "CLIENT_ACCESS_TOKEN": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "",
            "refreshUrl": "",
            "scopes": {}
          }
        },
        "description": "A client access token, obtained by exchanging your client id and client secret for a token via an HTTP request to publiq's authorization server. See the [authentication docs about client access tokens](https://docs.publiq.be/docs/authentication/methods/client-access-token) for more info."
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized. Your request is missing the required credentials to authenticate. See the Authentication documentation for more info.\n\n* type: https://api.publiq.be/probs/auth/unauthorized\n* detail: might contain a developer-readable explanation of the reason",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Example": {
                "value": {
                  "type": "https://api.publiq.be/probs/auth/unauthorized",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden. Your request was successfully authenticated but you do not have permission to perform this particular request.\n\n* type: https://api.publiq.be/probs/auth/forbidden\n* detail: might contain a developer-readable explanation of the reason",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Example": {
                "value": {
                  "type": "https://api.publiq.be/probs/auth/forbidden",
                  "title": "Forbidden",
                  "status": 403,
                  "detail": "user must be admin of organizer abcd1234"
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/example": {
      "get": {
        "operationId": "get-example",
        "summary": "Retrieve example",
        "description": "This is a fictional example operation.",
        "tags": [
          "Example"
        ],
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          }
        ],
        "responses": {
          "200": {
            "description": "An example response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exampleProperty": {
                      "type": "string",
                      "example": "exampleValue",
                      "description": "Just an example property in the response."
                    }
                  },
                  "required": [
                    "exampleProperty"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    }
  }
}
